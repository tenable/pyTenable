name: Testing Pipeline

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install pytest            \
                      pytest-vcr        \
                      pytest-datafiles  \
                      pytest-cov        \
                      responses
          pip install -r requirements.txt
      - name: Run the unit test suite.
        run: |
          pytest tests                \
            --vcr-record=none         \
            --cov-report term-missing \
            --cov-report xml          \
            --cov=tenable tests
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  style:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Setup environment
      run: |
        python -m pip install -U pip
        pip install flake8          \
                    flake8-fixme    \
                    flake8-author   \
                    flake8-pylint   \
                    flake8-plugin-utils
    - name: Run flake8
      run: |
        flake8 tenable            \
          --count                 \
          --select=E9,F63,F7,F82  \
          --show-source           \
          --statistics
        flake8 tenable            \
          --count                 \
          --exit-zero             \
          --max-complexity=12     \
          --statistics

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: snyk/actions/setup@master
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Setup environment
        run: pip install -r requirements.txt
      - name: Snyk Library check
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test --org=pytenable

  installable:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: "Install package and test"
        run: |
          pip install pytest
          pip install .
          cd aux_tests && pytest test_installable.py
