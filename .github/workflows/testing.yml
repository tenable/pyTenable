name: Testing Pipeline

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
        - "3.7"
        - "3.8"
        - "3.9"
        - "3.10"
        - "3.11"
        - "3.12"

    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Run code linting
        run: uv run ruff check tenable --exit-zero

      - name: Run unit tests
        run: uv run pytest --vcr-record=none tests --cov-report xml:cov/coverage.xml

      - name: Save Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage_report_${{ matrix.python-version }}
          path: cov
          retention-days: 1

  security_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.8"
      - uses: astral-sh/setup-uv@v4

      - name: Run pip-audit
        run: |
          uv export --format requirements-txt | uv tool run pip-audit

      - name: Run Bandit code auditor
        run: uv tool run --with "bandit[toml,baseline,sarif]" bandit -c pyproject.toml -r . -ll
      
      - name: Export & Install requirements to run Snyk
        run: |
          uv pip compile pyproject.toml -o requirements.txt
          pip3 install -r requirements.txt

      - name: Snyk Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test --command=python3 --skip-unresolved=true
