name: Testing Pipeline

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
        - "3.10"
        - "3.11"
        - "3.12"
        - "3.13"

    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Run code linting
        run: uv run ruff check tenable --exit-zero

      - name: Run unit tests
        run: |
          uv run pytest \
            --vcr-record=none \
            --cov-report=xml:coverage.xml \
            --cov-fail-under=95
          
  code-assessments:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v4
        with:
          python-version: "3.10"
      - name: Run pip-audit
        run: uv export --format requirements-txt | uv tool run pip-audit

      - name: Run Bandit code auditor
        run: uv tool run --with "bandit[toml,baseline,sarif]" bandit -c pyproject.toml -r . -ll
