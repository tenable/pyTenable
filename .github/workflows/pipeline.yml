name: Automated checks on push

on: [push]

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install pytest            \
                      pytest-vcr        \
                      pytest-datafiles  \
                      responses
          pip install -r requirements.txt
      - name: Run the unit test suite.
        run: pytest --vcr-record=none tests

  style:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Setup environment
      run: |
        python -m pip install -U pip
        pip install flake8          \
                    flake8-fixme    \
                    flake8-author   \
                    pylint
    - name: Run flake8
      run: |
        flake8 tenable --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 tenable --count --exit-zero --max-complexity=10 --statistics

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.8@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: snyk test --org=pytenable
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.8@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: |
            snyk code test tenable --org=pytenable
